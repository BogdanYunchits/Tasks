a = {key:value, key:value}

def biggest_dict(**kwargs): # **kwargs - позволяет вписывать бесконечное количество аргументов для словаря
     my_dict.update(**kwargs) # .update - обновляет ваш словарь
     
     
element.count(find_element) # - позволяет посчитать количество вхождений

sorted(dict.items(), key=lambda x: x[0]) # - сортировка словаря, первый аргумент это сам словарь из которого получили все кортежи, второй аргумент ключ по которому сортируем,
#                                            в данном случае если нам нужно отсортировать по ключу словаря то х будет равнятся нулю, если же по значению то единице т.к. кортеж
#                                            имеет следующий вид (key, val)



item[START:STOP:STEP] # - берёт срез от номера START, до STOP (не включая его), с шагом STEP. По умолчанию START = 0, STOP = длине объекта, STEP = 1.
item[::3]

from collections import OrderedDict
dct = OrderedDict([items]) # - вызов упорядоченного списка, у которого есть дополнительные методы для изменения порядка словаря

od.move_to_end(key, last=True) # - Метод od.move_to_end() перемещает существующий ключ key в начало/конец упорядоченного словаря. Элемент перемещается в правый конец, 
#                                  если аргумент last=True (по умолчанию), или в начало, если last=False.

list(dict.items())[0] # - преобразование первого элемента словаря в список

dct['key'] = 'value' # - вставка новых значений в существующий словарь
